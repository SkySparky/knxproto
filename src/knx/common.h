#ifndef HPKNXD_KNX_COMMON_H
#define HPKNXD_KNX_COMMON_H

/**
 * KNXnet/IP Service Type
 */
typedef enum {
	KNXNETIP_SEARCH_REQUEST,
	KNXNETIP_SEARCH_RESPONSE,
	KNXNETIP_DESCRIPTION_REQUEST,
	KNXNETIP_DESCRIPTION_RESPONSE,
	KNXNETIP_CONNECTION_REQUEST,
	KNXNETIP_CONNECTION_RESPONSE,
	KNXNETIP_CONNECTIONSTATE_REQUEST,
	KNXNETIP_CONNECTIONSTATE_RESPONSE,
	KNXNETIP_DISCONNECT_REQUEST,
	KNXNETIP_DISCONNECT_RESPONSE,
	KNXNETIP_DEVICE_CONFIGURATION_REQUEST,
	KNXNETIP_DEVICE_CONFIGURATION_ACK,
	KNXNETIP_TUNNEL_REQUEST,
	KNXNETIP_TUNNEL_RESPONSE,
	KNXNETIP_ROUTING_INDICATION
} knxnetip_service;

/**
 * KNX Connection Type
 */
typedef enum {
	KNXNETIP_CONNREQ_TUNNEL = 4
} knxnetip_conn_type;

/**
 * KNX Layer
 */
typedef enum {
	KNXNETIP_LAYER_TUNNEL = 2
} knxnetip_layer;

/**
 * KNXnet/IP Protocol
 */
typedef enum {
	KNXNETIP_PROTO_UDP = 1,
	KNXNETIP_PROTO_TCP = 2
} knxnetip_proto;

#endif
